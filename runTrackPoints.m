function TrackingResultArray = runTrackPoints(movieDatabase,...
                                         movieKeyArray,...
                                         varargin)
parser = inputParser;
addRequired(parser, 'movieKeyArray',                                   ...
    @(x)validateattributes(x,{'numeric','cell'},                       ...
                             {'nonempty'}));

addParameter(parser,'finalFrame',           0,                         ...
    @(x)validateattributes(x,{'numeric'},                              ...
                             {'scalar','nonnegative','integer'}));

addParameter(parser,'incrementSaveNames',   1,                         ...
    @(x)validateattributes(x,{'numeric'},                              ...
                             {'scalar','nonnegative','integer'}));

addParameter(parser,'plotFormatSpecs',      {'+','Color','Green'},     ...
    @(x)validateattributes(x,{'cell'},                                 ...
                             {'nonempty'}));

addParameter(parser,'plotMarginFormatSpecs',{'+','Color','Blue'},      ...
    @(x)validateattributes(x,{'cell'},                                 ...
                             {'nonempty'}));

parse(parser,movieKeyArray,varargin{:});
finalFrame            = parser.Results.finalFrame;
incrementSaveNames    = parser.Results.incrementSaveNames;
plotFormatSpecs       = parser.Results.plotFormatSpecs;
plotMarginFormatSpecs = parser.Results.plotMarginFormatSpecs;


ParamsArray = loadParameters(movieDatabase,movieKeyArray);

% trackingResultBlank      = struct('reader',            [],...
%                                   'Params',            [],...
%                                   'TrackedPointStruct',[],...
%                                   'finalFrame',        []);
% initialize container for tracking results
TrackingResultArray      = cell(numel(ParamsArray),1);
     
for m = 1:numel(ParamsArray)
    displayStringForTracking = sprintf('Tracking data set %i',m);
    disp(displayStringForTracking);
    
    Params                   = ParamsArray{m};
    reader                   = bfGetReader(fullfile(Params.inputPathName,...
                                                    Params.inputFileName));
    
    TrackingResultArray{m}   = trackPoints(reader,Params,finalFrame);
    % Save data
    movieKey                 = getSingleMovieKey(movieKeyArray,m);
    disp('Saving data...')
    saveTrackingData(TrackingResultArray{m},movieDatabase,movieKey,    ...
                     'incrementSaveNames',incrementSaveNames,          ...
                     'plotFormatSpecs',plotFormatSpecs,                ...
                     'plotMarginFormatSpecs',plotMarginFormatSpecs);
    
    % Plot result of tracking data
    disp('done!')
end
end


